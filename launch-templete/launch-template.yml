AWSTemplateFormatVersion: '2010-09-09'
Description: "launch-template"

Parameters:
  # Instance
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Type: String
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    Default: t2.micro
  
  # Database
  DBUser:
    Type: String
  DBPassword:
    Type: String
  DBName:
    Type: String

  EC2RoleforCodeDeployArn:
    Type: String

Mappings:
  RegionMap:
    ap-northeast-1:
      HVM64: ami-0ce107ae7af2e92b5

Resources:
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: Codepipeline-template
      LaunchTemplateData:
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds:
        - !ImportValue InstanceSecurityGroup
        BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 8
            VolumeType: gp2
            Encrypted: true
        IamInstanceProfile:
          Arn: !Ref EC2RoleforCodeDeployArn
        TagSpecifications:
        - ResourceType: instance
          Tags:
          - Key: name
            Value: codepipeline
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo su -
            yum update -y
            yum install -y ruby
            yum install -y aws-cli
            cd /home/ec2-user
            aws s3 cp s3://aws-codedeploy-ap-northeast-1/latest/install . --region ap-northeast-1
            chmod +x ./install
            ./install auto
            timedatectl set-timezone Asia/Tokyo
            localectl set-locale LANG=ja_JP.UTF-8
            yum install -y aws-cfn-bootstrap cloud-init
            yum install -y git
            yum remove -y mariadb-libs
            yum localinstall https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm -y
            yum-config-manager --disable mysql80-community
            yum-config-manager --enable mysql57-community
            yum install -y mysql-community-server
            amazon-linux-extras install nginx1
            amazon-linux-extras install php7.3
            yum install -y php-xml && yum install -y php-mbstring
            export HOME=/root && /usr/bin/curl -s https://getcomposer.org/installer | /usr/bin/php && mv composer.phar /usr/local/bin/composer
            sed -i s@'listen = /run/php-fpm/www.sock'@'listen = 127.0.0.1:9000'@g /etc/php-fpm.d/www.conf
            systemctl enable mysqld && systemctl start mysqld
            echo validate_password_policy=LOW >> /etc/my.cnf
            systemctl restart mysqld
            mysql -u root "-p$(grep -oP '(?<=root@localhost\: )\S+' /var/log/mysqld.log)" -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '${DBPassword}'" --connect-expired-password
            mysql -u root "-p${DBPassword}" -e "CREATE USER '${DBUser}'@'%' IDENTIFIED BY '${DBPassword}'"
            mysql -u root "-p${DBPassword}" -e "GRANT ALL PRIVILEGES ON *.* TO '${DBUser}'@'%'"
            mysql -u root "-p${DBPassword}" -e "FLUSH PRIVILEGES"
            mysql -u root "-p${DBPassword}" -e "CREATE DATABASE ${DBName}"
            cat << 'EOF' > /etc/nginx/conf.d/default.conf
                server {
                    listen 80;
                    root /usr/share/nginx/html/food-app/public;
                    index index.php index.html index.htm;
                    access_log /var/log/nginx/access.log;
                    error_log /var/log/nginx/error.log;
                    location / {
                        try_files $uri $uri/ /index.php$is_args$args;
                    }
                    location ~ \.php$ {
                        fastcgi_split_path_info ^(.+\.php)(/.+)$;
                        fastcgi_pass 127.0.0.1:9000;
                        fastcgi_index index.php;
                        include fastcgi_params;
                        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                        fastcgi_param PATH_INFO $fastcgi_path_info;
                    }
                }
            EOF
            systemctl enable php-fpm && systemctl enable nginx
            /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
            /sbin/mkswap /var/swap.1
            /sbin/swapon /var/swap.1
